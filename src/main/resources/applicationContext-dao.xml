<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 引入所有properties属性文件 -->
	<context:property-placeholder location="classpath*:*.properties" />

	<!-- 数据源，使用druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${touna.username}"></property>
		<property name="password" value="${touna.password}"></property>
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="${touna.maxActive}" />
		<!--minIdle: 最小空闲连接 -->
		<property name="minIdle" value="${touna.minIdle}" />
		<!--maxIdle: 最大空闲连接 -->
		<!-- <property name="maxIdle" value="${touna.maxIdle}" /> -->
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="${touna.initialSize}" />
		<!-- 连接被泄露时是否打印 -->
		<property name="logAbandoned" value="${touna.logAbandoned}" />
		<!--removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="${touna.removeAbandoned}" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="${touna.removeAbandonedTimeout}" />
		<!--maxWait: 超时等待时间以毫秒为单位 60*1000等于60秒 -->
		<property name="maxWait" value="${touna.maxWait}" />
		<!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
		<property name="timeBetweenEvictionRunsMillis" value="${touna.timeBetweenEvictionRunsMillis}" />
		<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="${touna.numTestsPerEvictionRun}" />
		<!-- 1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程 -->
		<property name="minEvictableIdleTimeMillis" value="${touna.minEvictableIdleTimeMillis}" />
		<!-- SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录 -->
		<property name="validationQuery" value="SELECT NOW() FROM DUAL" />
	</bean>
	<!-- ========================================针对myBatis的配置项============================== -->
	<!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:SqlMapConfig.xml" />
		<property name="mapperLocations" value="classpath*:com/xz/*/mapping/*.xml" />
	</bean>
	<!-- 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描cn.touna.mybatisdemo.dao这个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage" value="com.xz.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

</beans>